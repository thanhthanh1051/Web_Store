version: "3"
networks:
  app-network: null
services:
  nginx:
    image: "nginx:stable-alpine"
    container_name: "nginx_${APP_NAME}"
    ports:
      - "81:80"
    volumes:
      - "./src:/var/www/html"
      - "./nginx-default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - php
      - mysql
    networks:
      - app-network
  mysql:
    image: "mysql:8.0"
    container_name: "mysql_${APP_NAME}"
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: "${APP_NAME}"
      MYSQL_USER: "${DB_USER_NAME}"
      MYSQL_PASSWORD: "${DB_USER_PASSWORD}"
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
  php:
    build:
      context: ""
      dockerfile: Dockerfile
    container_name: "php_${APP_NAME}"
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - "./src:/var/www/html"
    ports:
      - "9000:9000"
    networks:
      - app-network
  composer:
    image: "composer:latest"
    container_name: "composer_${APP_NAME}"
    volumes:
      - "./src:/var/www/html"
    working_dir: /var/www/html
    networks:
      - app-network
  npm:
    image: "node:18.18"
    container_name: "npm_${APP_NAME}"
    volumes:
      - "./src:/var/www/html"
    working_dir: /var/www/html
    entrypoint:
      - npm
